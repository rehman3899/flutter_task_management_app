// GENERATED CODE - DO NOT MODIFY BY HAND
// This part of the code is automatically generated by Hive's TypeAdapterGenerator.

part of 'task.dart';  // Reference to the 'task.dart' file where the Task class is defined.

// **************************************************************************
// TypeAdapterGenerator
// **************************************************************************

// Custom adapter class for Task, used by Hive to serialize and deserialize Task objects.
class TaskAdapter extends TypeAdapter<Task> {
  @override
  final int typeId = 0;  // Unique ID for this adapter, which matches the typeId used in the Task class.

  @override
  Task read(BinaryReader reader) {
    // Deserialization method: reads the binary data and reconstructs a Task object.
    
    // Read the number of fields in the serialized data.
    final numOfFields = reader.readByte();
    
    // Create a map of fields by reading each field's key (index) and value.
    final fields = <int, dynamic>{
      for (int i = 0; i < numOfFields; i++) reader.readByte(): reader.read(),
    };
    
    // Use the fields map to create and return a new Task object.
    return Task(
      id: fields[0] as String,          // Field 0 corresponds to the task's ID.
      title: fields[1] as String,       // Field 1 corresponds to the task's title.
      subTitle: fields[2] as String,    // Field 2 corresponds to the task's subtitle.
      createdAtTime: fields[3] as DateTime,  // Field 3 corresponds to the task's creation time.
      createdAtDate: fields[4] as DateTime,  // Field 4 corresponds to the task's creation date.
      isCompleted: fields[5] as bool,   // Field 5 corresponds to the task's completion status.
    );
  }

  @override
  void write(BinaryWriter writer, Task obj) {
    // Serialization method: writes the Task object as binary data.
    
    // Write the number of fields to be serialized.
    writer
      ..writeByte(6)  // The Task object has 6 fields to write.
      
      // Write each field's key (index) and value.
      ..writeByte(0)
      ..write(obj.id)
      ..writeByte(1)
      ..write(obj.title)
      ..writeByte(2)
      ..write(obj.subTitle)
      ..writeByte(3)
      ..write(obj.createdAtTime)
      ..writeByte(4)
      ..write(obj.createdAtDate)
      ..writeByte(5)
      ..write(obj.isCompleted);
  }

  @override
  int get hashCode => typeId.hashCode;  // Override hashCode for better performance.

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||  // Checks if this adapter is identical to another.
      other is TaskAdapter &&
          runtimeType == other.runtimeType &&
          typeId == other.typeId;  // Ensures equality by comparing typeId and runtimeType.
}
